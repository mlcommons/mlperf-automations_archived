{
  "alias": "get-generic-sys-util",
  "automation_alias": "script",
  "automation_uid": "5b4e0237da074764",
  "cache": true,
  "category": "Detection or installation of tools and artifacts",
  "default_env": {
    "CM_CLEAN_DIRS": "bin",
    "CM_SUDO": "sudo"
  },
  "deps": [
    {
      "tags": "detect,os"
    },
    {
      "tags": "get,generic-sys-util,_pkg-config,_detect",
      "skip_if_env": {
        "CM_SYS_UTIL_NAME": [
          "pkg_config"
        ]
      }
    }
  ],
  "new_env_keys": [
    "+PATH"
  ],
  "env": {
    "CM_GENERIC_SYS_UTIL_INSTALL_NEEDED": "no",
    "CM_SYS_UTIL_VERSION_CMD": ""
  },
  "input_mapping": {
    "ignore_missing": "CM_GENERIC_SYS_UTIL_IGNORE_MISSING_PACKAGE",
    "fail_safe": "CM_TMP_FAIL_SAFE"
  },
  "tags": [
    "get",
    "sys-util",
    "generic",
    "generic-sys-util"
  ],
  "uid": "bb0393afa8404a11",
  "variations": {
    "detect": {
      "group": "mode",
      "default": true,
      "env": {
        "CM_GENERIC_SYS_UTIL_RUN_MODE": "detect"
      },
      "prehook_deps": [
        {
          "tags": "get,generic-sys-util,_install",
          "force_env_keys": [
            "CM_TMP_FAIL_SAFE"
          ],
          "inherit_variation_tags": true,
          "names": [
            "install-sys-util"
          ],
          "skip_inherit_variation_groups": [
            "mode"
          ],
          "enable_if_env": {
            "CM_GENERIC_SYS_UTIL_INSTALL_NEEDED":
            [
              "yes"
            ]
          }
        }
      ]
    },
    "install": {
      "group": "mode",
      "env": {
        "CM_GENERIC_SYS_UTIL_RUN_MODE": "install"
      },
      "new_env_keys": [
        "CM_TMP_GENERIC_SYS_UTIL_PACKAGE_INSTALL_IGNORED",
        "CM_GET_GENERIC_SYS_UTIL_INSTALL_FAILED"
      ]
    },
    "cmake": {
      "env": {
        "CM_SYS_UTIL_NAME": "cmake",
        "CM_SYS_UTIL_VERSION_CMD": "cmake --version",
        "CM_SYS_UTIL_VERSION_RE": "cmake version ([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1
      },
      "state": {
        "cmake": {
          "apt": "cmake",
          "brew": "cmake",
          "dnf": "cmake",
          "yum": "cmake"
        }
      },
      "new_env_keys": ["CM_CMAKE_VERSION"]
    },
    "dmidecode": {
      "env": {
        "CM_SYS_UTIL_NAME": "dmidecode",
        "CM_SYS_UTIL_VERSION_CMD": "dmidecode --version",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "dmidecode": {
          "apt": "dmidecode",
          "brew": "",
          "dnf": "dmidecode",
          "yum": "dmidecode"
        }
      },
      "new_env_keys": ["CM_DMIDECODE_VERSION"]
    },
    "g++-11": {
      "env": {
        "CM_SYS_UTIL_NAME": "g++11",
        "CM_SYS_UTIL_VERSION_CMD": "g++-11 --version",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0,
        "CM_GENERIC_SYS_UTIL_IGNORE_VERSION_DETECTION_FAILURE": "yes"
      },
      "state": {
        "g++11": {
          "apt": "g++-11",
          "dnf": "gcc-toolset-11-gcc-c++"
        }
      },
      "new_env_keys": ["CM_GPP11_VERSION"]
    },
    "g++-12": {
      "env": {
        "CM_SYS_UTIL_NAME": "g++12",
        "CM_SYS_UTIL_VERSION_CMD": "g++-12 --version",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0,
	"CM_GENERIC_SYS_UTIL_IGNORE_VERSION_DETECTION_FAILURE": "yes"
      },
      "state": {
        "g++12": {
          "apt": "g++-12",
          "dnf": "gcc-toolset-12-gcc-c++"
        }
      },
      "new_env_keys": ["CM_GPP12_VERSION"]
    },
    "g++-9": {
      "env": {
        "CM_SYS_UTIL_NAME": "g++9",
        "CM_SYS_UTIL_VERSION_CMD": "g++-9 --version",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "g++9": {
          "apt": "g++-9",
          "dnf": "gcc-toolset-9-gcc-c++"
        }
      },
      "new_env_keys": ["CM_GPP9_VERSION"]
    },
    "gcc-11": {
      "env": {
        "CM_SYS_UTIL_NAME": "gcc11",
        "CM_SYS_UTIL_VERSION_CMD": "gcc-11 --version",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "gcc11": {
          "apt": "gcc-11"
        }
      },
      "new_env_keys": ["CM_GCC11_VERSION"]
    },
    "gcc-9": {
      "env": {
        "CM_SYS_UTIL_NAME": "gcc9",
        "CM_SYS_UTIL_VERSION_CMD": "gcc-9 --version",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "gcc9": {
          "apt": "gcc-9"
        }
      },
      "new_env_keys": ["CM_GCC9_VERSION"]
    },
    "gflags-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "gflags-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion gflags",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
        
      },
      "state": {
        "gflags-dev": {
          "apt": "libgflags-dev",
          "brew": "gflags",
          "dnf": "gflags-devel",
          "yum": "gflags-devel"
        }
      },
      "new_env_keys": ["CM_GFLAGS_DEV_VERSION"]
    },
    "git-lfs": {
      "env": {
        "CM_SYS_UTIL_NAME": "git-lfs",
        "CM_SYS_UTIL_VERSION_CMD": "git-lfs --version",
        "CM_SYS_UTIL_VERSION_RE": "git-lfs\\/([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "git-lfs": {
          "apt": "git-lfs",
          "brew": "git-lfs",
          "dnf": "git-lfs",
          "yum": "git-lfs"
        }
      },
      "new_env_keys": ["CM_GIT_LFS_VERSION"]
    },
    "glog-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "glog-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion libglog",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "glog-dev": {
          "apt": "libgoogle-glog-dev",
          "brew": "glog",
          "dnf": "glog-devel",
          "yum": "glog-devel"
        }
      },
      "new_env_keys": ["CM_GLOG_DEV_VERSION"]
    },
    "libboost-all-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libboost-all-dev",
        "CM_SYS_UTIL_VERSION_CMD": "dpkg -s libboost-dev | grep 'Version'",
        "CM_SYS_UTIL_VERSION_RE": "([0-9]+(\\.[0-9]+)+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1
      },
      "state": {
        "libboost-all-dev": {
          "apt": "libboost-all-dev",
          "brew": "",
          "dnf": "boost-devel",
          "yum": "boost-devel"
        }
      },
      "new_env_keys": ["CM_LIBBOOST_ALL_DEV_VERSION"]
    },
    "libbz2-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libbz2_dev",
	"CM_SYS_UTIL_VERSION_CMD_OVERRIDE": "bzcat --version 2>&1 | grep bzip > tmp-ver.out",
        "CM_SYS_UTIL_VERSION_RE": "([0-9]+(\\.[0-9]+)+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1
      },
      "state": {
        "libbz2_dev": {
          "apt": "libbz2-dev",
          "brew": "bzip2",
          "dnf": "libbzip2-devel",
          "yum": "libbzip2-devel",
          "zlib-devel": "libbz2-devel"
        }
      },
      "new_env_keys": ["CM_LIBBZ2_DEV_VERSION"]
    },
    "libev-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libev_dev",
        "CM_SYS_UTIL_VERSION_CMD": "dpkg -s libev-dev | grep 'Version'",
        "CM_SYS_UTIL_VERSION_RE": "([\\d:]+\\.[\\d\\.-]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libev_dev": {
          "apt": "libev-dev"
        }
      },
      "new_env_keys": ["CM_LIBEV_DEV_VERSION"]
    },
    "libffi": {
      "env": {
        "CM_SYS_UTIL_NAME": "libffi"
      },
      "state": {
        "libffi": {
          "apt": "libffi"
        }
      },
      "new_env_keys": ["CM_LIBFFI_VERSION"]
    },
    "libffi-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libffi_dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion libffi",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libffi_dev": {
          "apt": "libffi-dev",
          "brew": "libffi",
          "dnf": "libffi-devel",
          "yum": "libffi-devel"
        }
      },
      "new_env_keys": ["CM_LIBFFI_DEV_VERSION"]
    },
    "libffi7": {
      "env": {
        "CM_SYS_UTIL_NAME": "libffi7",
        "CM_SYS_UTIL_VERSION_CMD": "dpkg -l libffi7 2>/dev/null | grep '^ii' | awk '{print $3}' || rpm -q libffi7 2>/dev/null || pacman -Q libffi7 2>/dev/null",
        "CM_SYS_UTIL_VERSION_RE": "\\d\\.\\d-[0-9]+",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libffi7": {
          "apt": "libffi7"
        }
      },
      "new_env_keys": ["CM_LIBFFI7_VERSION"]
    },
    "libffi8": {
      "env": {
        "CM_SYS_UTIL_NAME": "libffi8"
      },
      "state": {
        "libffi8": {
          "apt": "libffi8"
        }
      },
      "new_env_keys": ["CM_LIBFFI8_VERSION"]
    },
    "libgdbm-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libgdbm_dev",
        "CM_SYS_UTIL_VERSION_CMD": "dpkg -s libgdbm-dev | grep 'Version'",
        "CM_SYS_UTIL_VERSION_RE": "([\\d]+\\.[\\d\\.-]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libgdbm_dev": {
          "apt": "libgdbm-dev"
        }
      },
      "new_env_keys": ["CM_LIBGDBM_DEV_VERSION"]
    },
    "libgmock-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libgmock-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion gmock",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libgmock-dev": {
          "apt": "libgmock-dev",
          "brew": "",
          "dnf": "gmock-devel",
          "yum": "gmock-devel"
        }
      },
      "new_env_keys": ["CM_LIBGMOCK_DEV_VERSION"]
    },
    "liblzma-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "liblzma_dev",
        "CM_SYS_UTIL_VERSION_CMD": "xz --version",
        "CM_SYS_UTIL_VERSION_RE": "(\\d(\\.\\d)+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "liblzma_dev": {
          "apt": "liblzma-dev"
        }
      },
      "new_env_keys": ["CM_LIBLZMA_DEV_VERSION"]
    },
    "libmkl-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libmkl-dev",
        "CM_SYS_UTIL_VERSION_CMD": "ldconfig -p | grep libmkl",
        "CM_SYS_UTIL_VERSION_RE": "libmkl[^ ]+ => /[^ ]+/libmkl[^ ]+\\.so\\.([\\d.]+)", 
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1 
      },
      "state": {
        "libmkl-dev": {
          "apt": "libmkl-dev",
          "brew": "",
          "dnf": "",
          "yum": ""
        }
      },
      "new_env_keys": ["CM_LIBMKL_DEV_VERSION"]
    },
    "libmpfr-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libmpfr-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion mpfr",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libmpfr-dev": {
          "apt": "libmpfr-dev",
          "brew": "",
          "dnf": "mpfr-devel.x86_64",
          "yum": "mpfr-devel.x86_64",
          "zypper": "mpfr-devel"
        }
      },
      "new_env_keys": ["CM_LIBMPFR_DEV_VERSION"]
    },
    "libncurses-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libncurses_dev",
        "CM_SYS_UTIL_VERSION_CMD": "ncurses5-config --version",
        "CM_SYS_UTIL_VERSION_RE": "([0-9]+(\\.[0-9]+)+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libncurses_dev": {
          "apt": "libncurses-dev",
          "dnf": "libncurses-devel",
          "yum": "libncurses-devel"
        }
      },
      "new_env_keys": ["CM_LIBNCURSES_DEV_VERSION"]
    },
    "libnuma-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libnuma-dev",
        "CM_SYS_UTIL_VERSION_CMD": "dpkg -l | grep libnuma",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
	      "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libnuma-dev": {
          "apt": "libnuma-dev",
          "brew": "",
          "dnf": "numactl-libs",
          "yum": "numactl-libs"
        }
      },
      "new_env_keys": ["CM_LIBNUMA_DEV_VERSION"]
    },
    "libpci-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libpci-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion libpci",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libpci-dev": {
          "apt": "libpci-dev",
          "brew": "",
          "dnf": "pciutils-devel",
          "yum": "pciutils-devel"
        }
      },
      "new_env_keys": ["CM_LIBPCI_DEV_VERSION"]
    },
    "libpng-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libpng-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion libpng",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libpng-dev": {
          "apt": "libpng-dev",
          "brew": "",
          "dnf": "libpng-devel",
          "yum": "libpng-devel"
        }
      },
      "new_env_keys": ["CM_LIBPNG_DEV_VERSION"]
    },
    "libre2-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libre2-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion re2",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libre2-dev": {
          "apt": "libre2-dev",
          "brew": "",
          "dnf": "libre-devel",
          "yum": "libre-devel"
        }
      },
      "new_env_keys": ["CM_LIBRE2_DEV_VERSION"]
    },
    "libreadline-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libreadline_dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion readline",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libreadline_dev": {
          "apt": "libreadline-dev",
          "dnf": "libreadline-devel",
          "yum": "readline-devel"
        }
      },
      "new_env_keys": ["CM_LIBREADLINE_DEV_VERSION"]
    },
    "libsqlite3-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libsqlite3_dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion sqlite3",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libsqlite3_dev": {
          "apt": "libsqlite3-dev"
        }
      },
      "new_env_keys": ["CM_LIBSQLITE3_DEV_VERSION"]
    },
    "libssl-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libssl_dev",
        "CM_SYS_UTIL_VERSION_CMD": "openssl version",
        "CM_SYS_UTIL_VERSION_RE": "OpenSSL\\s+([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1
      },
      "state": {
        "libssl_dev": {
          "apt": "libssl-dev",
          "brew": "openssl",
          "dnf": "libssl-devel",
          "yum": "libssl-devel"
        }
      },
      "new_env_keys": ["CM_LIBSSL_DEV_VERSION"]
    },
    "libudev-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "libudev-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion libudev",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "libudev-dev": {
          "apt": "libudev-dev",
          "brew": "",
          "dnf": "libudev-devl",
          "yum": "libudev-devel"
        }
      },
      "new_env_keys": ["CM_LIBUDEV_DEV_VERSION"]
    },
    "linux-tools": {
      "deps": [
        {
          "tags": "detect,os"
        }
      ],
      "env": {
        "CM_SYS_UTIL_NAME": "linux-tools"
      },
      "state": {
        "linux-tools": {
          "apt": "linux-tools-<<<CM_HOST_OS_KERNEL_VERSION>>>"
        }
      },
      "new_env_keys": ["CM_LINUX_TOOLS_VERSION"]
    },
    "md5sha1sum": {
      "env": {
        "CM_SYS_UTIL_NAME": "md5sha1sum",
        "CM_SYS_UTIL_VERSION_CMD": "md5sum --version | grep sha1sum",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "md5sha1sum": {
          "apt": "",
          "brew": "md5sha1sum"
        }
      },
      "new_env_keys": ["CM_MD5SHA1SUM_VERSION"]
    },
    "ninja-build": {
      "env": {
        "CM_SYS_UTIL_NAME": "ninja-build",
        "CM_SYS_UTIL_VERSION_CMD": "ninja --version",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "ninja-build": {
          "apt": "ninja-build",
          "brew": "ninja-build",
          "dnf": "ninja-build",
          "yum": "ninja-build",
          "zypper": "ninja-build"
        }
      },
      "new_env_keys": ["CM_NINJA_BUILD_VERSION"]
    },
    "nlohmann-json3-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "nlohmann_json3_dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion nlohmann_json",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "nlohmann_json3_dev": {
          "apt": "nlohmann-json3-dev",
          "dnf": "nlohmann-json-devel"
        }
      },
      "new_env_keys": ["CM_NLOHMANN_JSON3_DEV_VERSION"]
    },
    "ntpdate": {
      "env": {
        "CM_SYS_UTIL_NAME": "ntpdate",
        "CM_SYS_UTIL_VERSION_CMD": "dpkg -l ntpdate 2>/dev/null | grep ^ii | awk '{print $3}'",
        "CM_SYS_UTIL_VERSION_RE": "([A-Za-z0-9]+(\\.[A-Za-z0-9]+)+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "ntpdate": {
          "apt": "ntpdate",
          "brew": "",
          "dnf": "ntpdate",
          "yum": "ntpdate"
        }
      },
      "new_env_keys": ["CM_NTPDATE_VERSION"]
    },
    "numactl": {
      "deps": [
        {
          "enable_if_env": {
            "CM_HOST_OS_FLAVOR": [
              "rhel"
            ],
            "CM_HOST_OS_VERSION": [
              "9.1",
              "9.2",
              "9.3"
            ]
          },
          "tags": "install,numactl,from.src"
        }
      ],
      "env": {
        "CM_SYS_UTIL_NAME": "numactl",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "numactl": {
          "apt": "numactl",
          "dnf": "numactl-devel",
          "yum": "numactl-devel"
        }
      },
      "new_env_keys": ["CM_NUMACTL_VERSION"]
    },
    "nvidia-cuda-toolkit": {
      "env": {
        "CM_SYS_UTIL_NAME": "nvidia-cuda-toolkit",
        "CM_SYS_UTIL_VERSION_CMD": "nvcc --version",
        "CM_SYS_UTIL_VERSION_RE": "release ([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1
      },
      "state": {
        "nvidia-cuda-toolkit": {
          "apt": "nvidia-cuda-toolkit",
          "brew": "",
          "dnf": "nvidia-cuda-toolkit",
          "yum": "nvidia-cuda-toolkit"
        }
      },
      "new_env_keys": ["CM_NVIDIA_CUDA_TOOLKIT_VERSION"]
    },
    "pkg-config": {
      "env": {
        "CM_SYS_UTIL_NAME": "pkg_config",
        "CM_SYS_UTIL_VERSION_RE": "\\b(\\d+\\.\\d+(?:\\.\\d+)?)\\b",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "pkg_config": {
          "apt": "pkg-config",
          "brew": "pkg-config",
          "dnf": "pkg-config",
          "yum": "pkg-config"
        }
      }
    },
    "psmisc": {
      "env": {
        "CM_SYS_UTIL_NAME": "psmisc"
      },
      "state": {
        "psmisc": {
          "apt": "psmisc",
          "brew": "pstree",
          "dnf": "psmisc",
          "yum": "psmisc"
        }
      },
      "new_env_keys": ["CM_PSMISC_VERSION"]
    },
    "rapidjson-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "rapidjson-dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion RapidJSON",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "rapidjson-dev": {
          "apt": "rapidjson-dev",
          "brew": "",
          "dnf": "rapidjson-devel",
          "yum": "rapidjson-devel"
        }
      },
      "new_env_keys": ["CM_RAPIDJSON_DEV_VERSION"]
    },
    "rsync": {
      "env": {
        "CM_SYS_UTIL_NAME": "rsync",
        "CM_SYS_UTIL_VERSION_CMD": "rsync --version",
        "CM_SYS_UTIL_VERSION_RE": "rsync\\s+version\\s+([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "rsync": {
          "apt": "rsync",
          "brew": "rsync",
          "dnf": "rsync",
          "yum": "rsync",
          "zypper": "rsync"
        }
      },
      "new_env_keys": ["CM_RSYNC_VERSION"]
    },
    "screen": {
      "env": {
        "CM_SYS_UTIL_NAME": "screen",
        "CM_SYS_UTIL_VERSION_CMD": "screen --version",
        "CM_SYS_UTIL_VERSION_RE": "Screen version ([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "screen": {
          "apt": "screen",
          "brew": "screen",
          "dnf": "screen",
          "yum": "screen",
          "zypper": "rsync"
        }
      },
      "new_env_keys": ["CM_SCREEN_VERSION"]
    },
    "sox": {
      "env": {
        "CM_SYS_UTIL_NAME": "sox",
        "CM_SYS_UTIL_VERSION_CMD": "sox --version",
        "CM_SYS_UTIL_VERSION_RE": "sox:\\s+SoX\\s+v([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "sox": {
          "apt": "sox",
          "brew": "sox",
          "dnf": "sox"
        }
      },
      "new_env_keys": ["CM_SOX_VERSION"]
    },
    "systemd": {
      "env": {
        "CM_SYS_UTIL_NAME": "systemd",
        "CM_SYS_UTIL_VERSION_CMD": "systemctl --version",
        "CM_SYS_UTIL_VERSION_RE": "systemd ([\\d]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "systemd": {
          "apt": "systemd",
          "brew": "",
          "dnf": "systemd",
          "yum": "systemd"
        }
      },
      "new_env_keys": ["CM_SYSTEMD_VERSION"]
    },
    "tk-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "tk_dev",
        "CM_SYS_UTIL_VERSION_CMD": "dpkg -s tk-dev | grep Version",
        "CM_SYS_UTIL_VERSION_RE": "([0-9]+(\\.[0-9]+)+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1
      },
      "state": {
        "tk_dev": {
          "apt": "tk-dev"
        }
      },
      "new_env_keys": ["CM_TK_DEV_VERSION"]
    },
    "transmission": {
      "env": {
        "CM_SYS_UTIL_NAME": "transmission",
        "CM_SYS_UTIL_VERSION_CMD": "transmission-daemon --version",
        "CM_SYS_UTIL_VERSION_RE": "transmission-daemon ([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "transmission": {
          "apt": "transmission-daemon",
          "brew": "transmission",
          "dnf": "transmission-daemon",
          "yum": "transmission-daemon"
        }
      },
      "new_env_keys": ["CM_TRANSMISSION_VERSION"]
    },
    "wget": {
      "env": {
        "CM_SYS_UTIL_NAME": "wget",
        "CM_SYS_UTIL_VERSION_CMD": "wget --version",
        "CM_SYS_UTIL_VERSION_RE": "Wget\\s*([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "wget": {
          "apt": "wget",
          "brew": "wget"
        }
      },
      "new_env_keys": [
        "CM_WGET_VERSION"
      ]
    },
    "wkhtmltopdf": {
      "env": {
        "CM_SYS_UTIL_NAME": "wkhtmltopdf",
        "CM_SYS_UTIL_VERSION_CMD": "wkhtmltopdf --version",
        "CM_SYS_UTIL_VERSION_RE": "wkhtmltopdf ([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "wkhtmltopdf": {
          "apt": "wkhtmltopdf",
          "brew": "wkhtmltopdf"
        }
      },
      "new_env_keys": ["CM_WKHTMLTOPDF_VERSION"]
    },
    "vim-common": {
      "env": {
        "CM_SYS_UTIL_NAME": "vim_common",
        "CM_SYS_UTIL_VERSION_CMD": "vim --version",
        "CM_SYS_UTIL_VERSION_RE": "VIM - Vi IMproved ([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "vim_common": {
          "apt": "vim-common",
          "brew": "vim",
          "dnf": "vim-common",
          "yum": "vim-common",
          "choco": "vim"
        }
      },
      "new_env_keys": ["CM_VIM_COMMON_VERSION"]
    },
    "xz": {
      "env": {
        "CM_SYS_UTIL_NAME": "xz",
        "CM_SYS_UTIL_VERSION_CMD": "xz --version",
        "CM_SYS_UTIL_VERSION_RE": "xz \\(XZ Utils\\) ([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 1
      },
      "state": {
        "xz": {
          "apt": "xz-utils",
          "brew": "xz",
          "dnf": "xz",
          "yum": "xz",
          "choco": "xz"
        }
      },
      "new_env_keys": ["CM_XZ_VERSION"]
    },
    "zlib": {
      "env": {
        "CM_SYS_UTIL_NAME": "zlib",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion zlib",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "zlib": {
          "apt": "zlib1g",
          "choco": "zlib"
        }
      },
      "new_env_keys": ["CM_ZLIB_VERSION"]
    },
    "zlib1g-dev": {
      "env": {
        "CM_SYS_UTIL_NAME": "zlib1g_dev",
        "CM_SYS_UTIL_VERSION_CMD": "pkg-config --modversion zlib",
        "CM_SYS_UTIL_VERSION_RE": "([\\d.]+)",
        "CM_TMP_VERSION_DETECT_GROUP_NUMBER": 0
      },
      "state": {
        "zlib1g_dev": {
          "apt": "zlib1g-dev",
          "dnf": "zlib-devel",
          "yum": "zlib-devel",
          "zypper": "zlib-devel"
        }
      },
      "new_env_keys": ["CM_ZLIB1G_DEV_VERSION"]
    }
  },
  "tests": {
    "run_inputs": [
      {
        "docker": "yes",
        "docker_os": "rhel",
        "docker_os_version": "9",
        "test-all-variations": "yes",
        "env": {
          "CM_TMP_FAIL_SAFE": "yes"
        },
        "ignore_missing": "yes"
      },
      {
        "docker": "yes",
        "docker_os": "ubuntu",
        "docker_os_version": "20.04",
        "test-all-variations": "yes",
        "ignore_missing": "yes",
        "fail_safe": "yes"
      },
      {
        "docker": "yes",
        "docker_os": "ubuntu",
        "docker_os_version": "22.04",
        "test-all-variations": "yes",
        "ignore_missing": "yes",
        "fail_safe": "yes"
      },
      {
        "docker": "yes",
        "docker_os": "ubuntu",
        "docker_os_version": "24.04",
        "test-all-variations": "yes",
        "ignore_missing": "yes",
        "fail_safe": "yes"
      }
    ]
  }
}
